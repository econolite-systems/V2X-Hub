// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.3/containers/docker-existing-dockerfile
{
	"name": "Using Dockerfile-devcontainer",
	"runArgs": ["--init" ],
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/V2X-Hub,type=bind,consistency=cached",
	"workspaceFolder": "/home/V2X-Hub",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	//"dockerFile": "../Dockerfile-devcontainer",
	"dockerComposeFile": [ "docker-compose.yml" ]

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "v2xhub-dev",

	// Set *default* container specific settings.json values on container create.
	"settings": {},
	"containerEnv": {
		"MYSQL_PASSWORD_FILE": "/secrets/mysql_password",
		"MYSQL_ROOT_PASSWORD_FILE": "/secrets/mysql_root_password"
	},
	"remoteEnv": {
		// "PATH": "${containerEnv:PATH}:/some/other/path",
		// "MY_REMOTE_VARIABLE": "some-other-value-here",
		// "MY_REMOTE_VARIABLE2": "${localEnv:SOME_LOCAL_VAR}"
	},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["ms-vscode.cpptools", "ms-vscode.cmake-tools"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "mkdir /secrets && echo echo 'ivp' > /secrets/mysql_password && echo 'ivp' > /secrets/mysql_root_password && apt-get update && apt-get upgrade -y  gdb mysql-client"

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
